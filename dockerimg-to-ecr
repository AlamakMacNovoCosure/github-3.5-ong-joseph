Push docker image to AWS_ECR 

Steps -

1. Create image using Nginx and add a file that show date of container deployed.
	
	create working directory and change into directory
		mkdir ImageToECR_project
		cd ImageToECR_project

	create image using Nginx - docker command as follow: 
		docker pull nginx
 	
	confirm pulled image - docker command as follow:
		docker image ls

	create a Dockerfile & an index.html file - commands as follow:
		touch Dockerfile
		touch index.html

	check that the said file are created - command as follow:
		ls -l

	using nano test editor we write the following commands:
		FROM nginx 
		# The FROM instruction initializes a new build stage and sets the Base Image for subsequent instructions.
		
		RUN apt-get update -y
		# The RUN instruction will execute any commands in a new layer on top of the current image and commit the results. The resulting committed image will be used for the next step in the Dockerfile.
		
		COPY index.html /usr/share/nginx/html
		# The COPY instruction copies new files or directories from <src> and adds them to the filesystem of the container at the path <dest> .

	Build the container image - command as follow:
		docker image build -t customnginx .

2. Deploy container with port 8080 open

	create a container from the image customnginx - commands as follow:
		docker un -d --name joseph-container1 -p 8080:80 customnginx

3. Save container data to AWS ECR

	create a repository (via AWS CLI or AWS CONSOLE) to store container data - command as follows:
		AWS CLI - aws ecr create-repository --repository-name joseph-docker-customnginx --region ap-southeast-1

	Use the following steps to authenticate and push an image to your repository. 

	Retrieve an authentication token and authenticate your Docker client to your registry.
	
	Use the AWS CLI:

		aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 255945442255.dkr.ecr.ap-southeast-1.amazonaws.com

	Note: If you receive an error using the AWS CLI, make sure that you have the latest version of the AWS CLI and Docker installed.
	Build your Docker image using the following command. You can skip this step if your image is already built:

		docker build -t joseph-container1 .

	After the build completes, tag your image so you can push the image to this repository:

		docker tag joseph-ecr-proj:latest 255945442255.dkr.ecr.ap-southeast-1.amazonaws.com/joseph-container1:v0.0.1

	Run the following command to push this image to your newly created AWS repository:

		docker push 255945442255.dkr.ecr.ap-southeast-1.amazonaws.com/joseph-container1:v0.0.1

We were able to build an image from a base image pulled from Docker Hub, create a container on a specified port from that image and push the image to Amazon ECR repository.

THANK YOU FOR READING.
4.
5.
6.
